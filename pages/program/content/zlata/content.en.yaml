speaker: |
    **Zlata Obukhovskaya**, evangelist of Moscow Python community
    
title: "Structured concurrency. Is asynchronous Python considered harmful?"

description: |
    Structured concurrency is an approach to asynchronous programming, implemented by Nathaniel Smith in his project Trio. In this approach, structurally connected concurrent functions are encapsulated within some context, which makes it easier to handle various failure scenarios, clean up resources and propagate errors.

    This concept was adopted by developers from other ecosystems (Kotlin, C, Swift) thus raising new questions:
    
    — What if instead of a set of concurrent functions we want to run a graph of concurrent functions?
    
    — How to pass data between concurrent contexts in a safe manner?
    
    — How to supervise concurrent graphs lifecycles?
    
    — How to execute graph effectively on one core? On multiple cores?
    
    — How to make execution deterministic?

    Meanwhile these problems were more or less successfully approached in other programming languages.

    Zlata Obukhovskaya, evangelist of Moscow Python community, will tell how these approaches are can be applied to Python.
